<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
	<!--Shiro-->
	<!-- Realm实现 -->
	<bean id="statelessRealm" class="com.ims.filter.MyStatelessRealm">
		<property name="cachingEnabled" value="false"/>
	</bean>
	<!-- 禁用掉会话调度器 -->
	<bean id="sessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager">
		<property name="sessionValidationSchedulerEnabled" value="false"/>
	</bean>
	<!--解决报错，组装默认的subjectDAO-->
	<bean id="subjectDAO" class="org.apache.shiro.mgt.DefaultSubjectDAO">
		<property name="sessionStorageEvaluator" ref="sessionStorageEvaluator"/>
	</bean>
	<bean id="sessionStorageEvaluator" class="org.apache.shiro.mgt.DefaultSessionStorageEvaluator">
		<property name="sessionStorageEnabled" value="false"/>
	</bean>
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="statelessRealm"/>
		<property name="subjectDAO" ref="subjectDAO"/>
		<property name="sessionManager" ref="sessionManager"/>
	</bean>
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
		<property name="arguments" ref="securityManager"/>
	</bean>

	<bean id="myStatelessFilter" class="com.ims.filter.MyStatelessShiroFilter"/>
	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"/>
		<property name="filters">
			<util:map>
				<entry key="statelessAuth" value-ref="myStatelessFilter"/>
			</util:map>
		</property>
		<property name="loginUrl" value="/login"/>
		<property name="successUrl" value="/main"/>
		<property name="unauthorizedUrl" value="/login"/>
		<property name="filterChainDefinitions">
			<value>
				/assets/**=anon
				/login=anon
				/unauthorized=anon
				/user/**=statelessAuth,roles[user]
				/admin/**=statelessAuth,roles[admin]
				/**=statelessAuth
			</value>
		</property>
	</bean>
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!--AOP式方法级权限检查-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>



</beans>