<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 其中命名空间指向与该文件同名的DAO层接口 -->
<mapper namespace="com.ims.dao.IUserDAO">

	<!-- 通过resultMap解决实体类属性与数据库字段名不一致的问题 -->
	<resultMap type="com.ims.entity.User" id="userResult">
		<!-- 其中id为主键，result为普通字段 -->
		<!-- property对应实体类属性，column对应数据库字段名（查询结果集中的字段名） -->
		<id property="id" column="id"/>
		<result property="username" column="username" />
		<result property="password" column="password" />
		<result property="logintime" column="logintime" />
		<result property="usertype" column="usertype" />
		<result property="userstatus" column="userstatus" />
		<result property="regtime" column="regtime" />
		<result property="remark" column="remark" />
	</resultMap>
	
	<!-- 增删改查 -->
	<insert id="add"  parameterType="java.lang.String">
		${_parameter}
	</insert>
	<delete id="del"  parameterType="java.lang.String">
		${_parameter}
	</delete>
	<update id="alter"  parameterType="java.lang.String">
		${_parameter}
	</update>
	<select id="query" resultMap="userResult" parameterType="String">
		${_parameter}
	</select>
	
	 <!-- 插入数据后获得自增主键的值 -->
	<insert id="insert" keyProperty="id" keyColumn="id">
		INSERT INTO user(username,password,usertype,userstatus,regtime,remark) VALUES(#{username},#{password},#{usertype},#{userstatus},#{regtime},#{remark})
	</insert>
	<!-- 修改用户内容 -->
	<update id="update">
		UPDATE user set username=#{username}, password=#{password} userstatus=#{userstatus}, remark=#{remark} WHERE id=#{id}
	</update>
	<!-- 根据id删除用户 -->
    <delete id="delete">
        DELETE FROM user WHERE id=#{id}
    </delete>
	<!-- 根据id查询用户 -->
	<select id="findById" resultMap="userResult">
		SELECT * FROM user WHERE id=#{id}
	</select>
    <!-- 查询所有用户 -->
	<select id="findAll" resultMap="userResult">
		SELECT * FROM user
    </select>

	<!-- 登录认证，返回用户id -->
	<select id="checkLogin" resultType="Integer">
		SELECT id FROM user where username=#{0} and password=#{1}
    </select>

	<update id="updatelogintime">
		UPDATE user set logintime=#{logintime} WHERE id=#{id}
	</update>

</mapper>